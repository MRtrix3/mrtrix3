#/bin/bash

LOG=memalign.log
echo -n "Checking memory alignment for Eigen 3.3 compatibility... "
echo "Checking memory alignment for Eigen 3.3 compatibility..." > $LOG
echo "" >> $LOG

retval=0

for f in $(find . -type f -name '*.h' -o -name '*.cpp' | grep -v '_moc.cpp'); do 

  [[ $(basename $f) == "icons.cpp" ]] && continue

# detect classes not declared MEMALIGN or NOMEMALIGN:
  res=$( \
    cat $f | \
# remove C preprocessor macros:
    grep -v '^#' | \
# remove C++ single-line comments:
    perl -pe 's|//.*$||' | \
# remove all newlines to make file one long line:
    tr '\n' ' ' | \
# remove any duplicate spaces:
    perl -pe 's|\s+| |g' | \
# remove C-style comments:
    perl -pe 's|/\*.*?\*/||g' | \
# remove quoted strings:
    perl -pe 's/(")(\\"|.)*?"//g' | \
# remove any text within a template declaration (i.e. within <>):
    perl -pe 's|<[^{};<]*?>||g' | \
# and do it multiple times to handle nested declarations:
    perl -pe 's|<[^{};<]*?>||g' | \
    perl -pe 's|<[^{};<]*?>||g' | \
    perl -pe 's|<[^{};<]*?>||g' | \
# match for the parts we're interested in and output just the bits that match:
    grep -Eo '(enum\s*)?\b(class|struct)\b[^;{]*?{(\s*(MEMALIGN\s*\([^\)]*\)|NOMEMALIGN))?' | \
# remove matches that correspond to an enum class declaration:
    grep -Ev '\benum\s*class\b' | \
# remove matches that are properly specified:
    grep -Ev '\b(class|struct)\b[^;{]*?{(\s*(MEMALIGN\s*\([^\)]*\)|NOMEMALIGN))'
  )


# detect any instances of std::vector:
  res="$res"$( \
    cat $f | \
# remove C preprocessor macros:
    grep -v '^#' | \
# remove C++ single-line comments:
    perl -pe 's|//.*$||' | \
# remove all newlines to make file one long line:
    tr '\n' ' ' | \
# remove any duplicate spaces:
    perl -pe 's|\s+| |g' | \
# remove C-style comments:
    perl -pe 's|/\*.*?\*/||g' | \
# remove quoted strings:
    perl -pe 's/(")(\\"|.)*?"//g' | \
# remove any text within a template declaration (i.e. within <>):
    perl -pe 's|<[^{};<]*?>||g' | \
# and do it multiple times to handle nested declarations:
    perl -pe 's|<[^{};<]*?>||g' | \
    perl -pe 's|<[^{};<]*?>||g' | \
    perl -pe 's|<[^{};<]*?>||g' | \
# match for the parts we're interested in and output just the bits that match:
    grep -Eo '(?<!::)std::vector\>' 
  )

# if anything is left after that, show it:
  if [[ ! -z $res ]]; then 
    echo "################################### $f" >> $LOG
    echo "$res" >> $LOG
    retval=1
  fi 

done


# set exit code:
if [[ $retval == 0 ]]; then
  echo "OK" 
  echo "no issues detected" >> $LOG
else
  echo "FAIL"
  
  echo "" >> $LOG
  echo "Please add MEMALIGN() macro to the class declarations identified above
and replace all occurrences of std::vector with MR::vector" >> $LOG
  exit 1
fi

