#!/usr/bin/env python

# automatically set the PATH environment variable to include the MRtrix3
# executables and scripts. This script must be run after a successful build,
# from the MRtrix3 toplevel folder:
#
#   ./set_path
#
# By default, the script will add the relevant 'export PATH' directive to the
# relevant BASH rc file: ~/.bashrc (~/.bash_profile on MacOSX). If this in not
# appropriate, it is possible to specify the file to be modified as the
# argument, e.g.:
#
#   ./set_path ~/.profile
#
# Note that this works only for Bourne shell and derivatives (BASH in
# particular). This will not work for the C shell and derivatives.


import sys, os, platform, subprocess

# on Windows, need to use MSYS2 version of python - not MinGW version:
if sys.executable[0].isalpha() and sys.executable[1] == ':':
  python_cmd = subprocess.check_output ([ 'cygpath.exe', '-w', '/usr/bin/python' ]).splitlines()[0].strip()
  sys.exit (subprocess.call ([ python_cmd ] + sys.argv))

# check whether we are in the right location:
label = ""
script_dir = os.path.dirname (os.path.abspath(__file__))
if not os.path.samefile (os.getcwd(), script_dir):
  label = '"' + os.path.basename(os.getcwd()) + '" module '

bin_dir = os.path.join(os.getcwd(), 'bin')
if not os.path.isdir (bin_dir):
    print ('''
ERROR: no bin/ folder found in expected location!

This script needs to be run from the MRtrix3 toplevel folder (or an MRtrix3
module's toplevel folder).
''')
    sys.exit (1)


# set default destination file based on OS:
filename = os.path.expanduser('~')
sysname = platform.system().lower()
if sysname == 'darwin':
  filename = os.path.join(filename, '.bash_profile')
else:
  filename = os.path.join(filename, '.bashrc')


# check whether destination file has been specified explicitly:
if len(sys.argv) == 2:
  filename = sys.argv[1]


# what will be written to file:
comment='# MRtrix3 ' + label + 'PATH automatically generated by set_path script - do NOT modify:\n'
set_path = 'export PATH="' + bin_dir + os.pathsep + '$PATH"\n'



is_next_line = False
append_path = True
output = ''

if os.path.isfile (filename):
  with open (filename, 'r') as f:
    for line in f:
      if is_next_line is True:
        if not line.startswith ('export PATH='):
          print ('''
ERROR: File appears to have been modified by this script previously, but the
contents do not match the expected format.

You will need to manually edit the relevant file "''' + filename + '''" in
one of two ways:

1. Amend the existing file contents, so that PATH is correctly updated to
   include MRtrix3 binaries and scripts.

2. Remove the text that was previously added to the file by this script, and
   then run the set_path script again. The offending text is the following line
   AND the one immediately after it:
   ''' + comment + '''
''')
          sys.exit (1)
        if line == set_path:
          print ('File "' + filename + '" is already up to date')
          sys.exit (0)

        output += set_path
        is_next_line = False
        append_path = False
        continue

      if line == comment:
        is_next_line = True

      output += line


# comment was the last line:
if is_next_line is True:
  output += set_path
# if previous modification not detected:
elif append_path is True:
  output += '\n' + comment + set_path

with open (filename, 'w') as f:
  f.write (output)
print ('File "''' + filename + '" succesfully updated')
print ('(Close terminal and open a new one for change to take effect)')
