#!/usr/bin/env python

# Script that receives as argument a segmented T1 image from FreeSurfer, and outputs
#   a five-tissue-type (5TT) segmented image in a format appropriate for ACT
# Note that there are many structures that FreeSurfer does not segment, and therefore the
#   tracking behaviour may not be as expected in those regions. This script is primarly
#   provided to demonstrate that ACT is independent of the particular method used to
#   derive the tissue segmentation; hopefully additional scripts will be developed in
#   the future to use the results from other software packages.


# Any of the following images generated using FreeSurfer's recon-all should work using this script:
# aseg.mgz (recommended)
# aparc.a2009s+aseg.mgz
# aparc+aseg.mgz
# aseg.auto.mgz
# aseg.auto_noCCseg.mgz


import os, sys
import lib.app

from lib.binaryInPath import binaryInPath
from lib.errorMessage import errorMessage
from lib.isWindows    import isWindows
from lib.printMessage import printMessage
from lib.runCommand   import runCommand

lib.app.initCitations([ 'ACT' ])
lib.app.initParser('Generate a 5TT image suitable for ACT from a FreeSurfer segmentation')
lib.app.parser.add_argument('input',  help='The input image series; this should be one of the \'aseg\' images provided by FreeSurfer')
lib.app.parser.add_argument('output', help='The output 5TT image')
lib.app.initialise()

if isWindows():
  errorMessage('Script cannot run on Windows due to FreeSurfer dependency')

config_file_name = 'FreeSurfer2ACT.txt'

freesurfer_home = os.environ.get('FREESURFER_HOME', '')
if not freesurfer_home:
  errorMessage('Environment variable FREESURFER_HOME is not set; please run appropriate FreeSurfer configuration script or set manually')

freesurfer_lut = os.path.join(freesurfer_home, 'FreeSurferColorLUT.txt')
if not os.path.isfile(freesurfer_lut):
  errorMessage('Could not find FreeSurfer lookup table file\n(Expected location: ' + freesurfer_lut + ')')

config_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'data', config_file_name);
if not os.path.isfile(config_path):
  errorMessage('Could not find config file for converting FreeSurfer parcellation output to tissues\n(Expected location: ' + config_path + ')')

# Initial conversion from FreeSurfer parcellation to five principal tissue types
runCommand('labelconfig ' + lib.app.args.input + ' ' + config_path + ' ' + os.path.join(lib.app.tempDir, 'indices_precrop.mif') + ' -lut_freesurfer ' + freesurfer_lut)

lib.app.gotoTempDir()

# Use mrcrop to reduce file size
runCommand('mrthreshold indices_precrop.mif - -abs 0.5 | mrcrop indices_precrop.mif indices.mif -mask -')

# Convert into the 5TT format for ACT
runCommand('mrcalc indices.mif 1 -eq cgm.mif')
runCommand('mrcalc indices.mif 2 -eq sgm.mif')
runCommand('mrcalc indices.mif 3 -eq  wm.mif')
runCommand('mrcalc indices.mif 4 -eq csf.mif')
runCommand('mrcalc indices.mif 5 -eq path.mif')
result_path = 'result' + os.path.splitext(lib.app.args.output)[1]
runCommand('mrcat cgm.mif sgm.mif wm.mif csf.mif path.mif - -axis 3 | mrconvert - ' + result_path + ' -datatype float32')

# Move the final result image to where it should be
lib.app.moveFileToDest(result_path, lib.app.args.output)

lib.app.complete()


